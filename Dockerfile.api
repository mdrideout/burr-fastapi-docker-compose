# ======================== Base stage ========================>
FROM python:3.11-slim AS base

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
  # Required for burr
  gcc \ 
  build-essential \
  # Required for poetry
  curl \
  && rm -rf /var/lib/apt/lists/*

# Install Poetry and print any errors
RUN curl https://install.python-poetry.org | POETRY_VERSION=1.8.3 python3 - \
  || (echo "Poetry installation failed, outputting error log:" \
  && cat /app/poetry-installer-error-*.log \
  && exit 1)
ENV PATH="/root/.local/bin:$PATH"

# Copy poetry config files
COPY pyproject.toml poetry.lock ./

# ======================== Production stage ========================>
FROM base AS production

# Install dependencies (without development dependencies)
RUN poetry config virtualenvs.create false \
  && poetry install --no-dev --no-interaction --no-ansi

# Copy the rest of your backend code
COPY . .

# Expose port
EXPOSE 8000

# Run the FastAPI application for production
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

# ======================== Development stage ========================>
FROM base AS development

# Install dependencies (including development dependencies for hot reloading)
RUN poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi

# Copy the rest of your backend code
COPY . .

# Expose port
EXPOSE 8000

# Run the FastAPI application with hot-reloading for development
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]